@startuml
package controller{
skinparam groupInheritance 2
skinparam linetype polyline
   class AppController{
      -PLAYER_NUMBER_OPTIONS : List<Integer>
      -BOARD_OPTIONS : List<String>
      -roborally : RoboRally

      -setupGameController(Board board) : void
      +newGame() : void
      +saveGame() : void
      +loadGame() : void
      +stopGame() : boolean
      +exit() : void
   }
   class GameController{
      -generateRandomCommandCard() : CommandCard
      -makeProgramFieldsVisible(int register): void
      -makeProgramFieldsInvisible() : void
      -continuePrograms() : void
      -doPriorityAntennaAction() : void
      -changePlayer(Player currentPlayer, int step) : void
      -executeCommand(Player player, Command command) : void
      -boardElementsActivationOrder() : void
      #executeNextStep() : void
      +moveCurrentPlayerToSpace(Space space) : void
      +startProgrammingPhase() : void
      +playerDeck(Command card) : void
      +finishProgrammingPhase() : void
      +executePrograms() : void
      +executeStep() : void
      +executeCommandAndResumeActivation(Command command) : void
      +assertPlayerPriorityAndChangeBoardPlayers(Space antennaSpace) : void
      +moveCards(CommandField source, CommandCardField target) : boolean
      +energyCount(Player player) : int
      +recreatePlayersView() : void
   }
   class RobotMovementController{
      -isPushable(Player player, Heading heading) : boolean
      -isConveyet(Player player, Heading heading) : boolean
      -isOccupied(Space space) : boolean

   }
   class impossibleMoveExeption{
      -player : Player
      -space : Space
      -heading : Heading
   }
   class SaveLoadGame{
      {Static} -PLAYER_COLORS : List<String>
      {Static} -BOARDS_FOLDER : String
      {Static} -SAVED_BOARDS_FOLDER : String
      {Static} -JSON_EXT : String
      {Static} -newBoardCreated : Boolean

      {static} -getAllSpacesOfTypeByFieldAction(Board, FieldAction) : List<Space>
      {Static} -placePlayersRandomly(List<Players>, List<space>)
      {Static} +saveBoardToDisk(Board board, String name) : void
      {Static} +loadBoard(String name): Board
      {Static} +newBoard(int numPlayers, String boardName) : Board
   }
   class Updater{
      -update : boolean
      -run : boolean

     +run() : void
     +updateBoardUI() : void
   }
}

interface Observer{
}
AppController -- SaveLoadGame
Observer <|.r. AppController
AppController -l- RoboRally
GameController -- AppController
GameController -d-- Updater
GameController -r- RobotMovementController
Board -d- GameController
Board -d- RobotMovementController
RobotMovementController *-d- impossibleMoveExeption
Updater - Client
@enduml